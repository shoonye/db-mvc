<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd"
	default-autowire="byName">
	
	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:test-mvc.properties</value>
				<value>classpath:mvc.properties</value>
			</list>
		</property>
	</bean>
	<!-- bean class="shoonye.util.ec.ThreadLocalExecutionContext" id="ec0" scope="singleton" /-->
	
	
	<context:annotation-config />
	<context:component-scan base-package="com.shoonye.util" />
	<tx:jta-transaction-manager/>
	<tx:annotation-driven/>
	
	<bean id="dataSource"
		class="com.atomikos.jdbc.nonxa.AtomikosNonXADataSourceBean">
		<property name="uniqueResourceName" value="MWDS" />
		<property name="driverClassName" value="${database.driver}" />
		<property name="url" value="${database.url}" />
		<property name="minPoolSize" value="${min.pool.size}" />
		<property name="maxPoolSize" value="${max.pool.size}" />
		<property name="borrowConnectionTimeout" value="10" />
		<property name="testQuery" value="select 1" />
		<property name="reapTimeout" value="${checkout.timeout}" />
		<property name="maintenanceInterval"
			value="${max.idle.time.excess.connections}" />
		<property name="maxIdleTime" value="${max.idle.time}" />
	</bean>
		

	<bean id="transactionManager" class="org.springframework.transaction.jta.JtaTransactionManager"
		depends-on="atomikosTransactionManager,atomikosUserTransaction">
		<property name="transactionManager" ref="atomikosTransactionManager" />
		<property name="userTransaction"    ref="atomikosUserTransaction" />
		<property name="allowCustomIsolationLevels" value="true" />
	</bean>

	<bean id="atomikosTransactionManager" class="com.atomikos.icatch.jta.UserTransactionManager"
		init-method="init" destroy-method="close"
		depends-on="userTransactionService">
		<property name="forceShutdown">
			<value>true</value>
		</property>
	</bean>
	
	<bean id="atomikosUserTransaction"
		class="com.atomikos.icatch.jta.UserTransactionImp"
		depends-on="userTransactionService" />


	<bean id="userTransactionService"
		class="com.atomikos.icatch.config.UserTransactionServiceImp"
		init-method="init" destroy-method="shutdownForce">
		<constructor-arg>
			<props>
				<prop key="com.atomikos.icatch.service">com.atomikos.icatch.standalone.UserTransactionServiceFactory
				</prop>
				<prop key="com.atomikos.icatch.tm_unique_name">dbmvc-test</prop>
				<prop key="com.atomikos.icatch.log_base_name">atkimos_test</prop>
				<prop key="com.atomikos.icatch.console_file_name">atomikos_test.log</prop>
				<prop key="com.atomikos.icatch.console_log_level">WARN</prop>
				<prop key="com.atomikos.icatch.threaded_2pc">true</prop>
			</props>
		</constructor-arg>
	</bean>

	<bean id="dialectProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean"> 
		<property name="properties"> <props> 
		<prop key="hibernate.transaction.factory_class">org.hibernate.transaction.CMTTransactionFactory</prop> 
		<prop key="hibernate.transaction.manager_lookup_class">com.atomikos.icatch.jta.hibernate3.TransactionManagerLookup</prop> 
		<prop key="hibernate.dialect">org.hibernate.dialect.H2Dialect</prop> 
		<prop key="hibernate.show_sql">false</prop> <prop key="hibernate.format_sql">true</prop> 
		<prop key="hibernate.use_sql_comments">true</prop> 
		<prop key="hibernate.generate_statistics">false</prop> 
		<prop key="hibernate.current_session_context_class">thread</prop> 
		<prop key="hibernate.hbm2ddl.auto">create</prop> 
		<prop key="hibernate.cache.use_query_cache">false</prop> 
		<prop key="hibernate.cache.use_second_level_cache">false</prop> 
		</props> </property> 
	</bean>

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
		<property name="hibernateProperties">
			<ref bean="dialectProperties" />
		</property>
		<property name="packagesToScan" value="shoonye.dbmvc.entity" />
	</bean>
	
	
</beans>